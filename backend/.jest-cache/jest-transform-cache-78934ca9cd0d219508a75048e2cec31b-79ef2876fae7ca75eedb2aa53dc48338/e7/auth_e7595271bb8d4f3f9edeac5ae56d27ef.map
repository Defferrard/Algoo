{"file":"C:\\Github\\Algoo\\backend\\src\\auth.ts","mappings":";;;;;;AAAA,mCAAqC;AAErC,8DAAyD;AACzD,qCAAiC;AACjC,wDAAgC;AAChC,+CAAsE;AAEtE,MAAM,wBAAwB,GAAG,KAAK,CAAC;AAE1B,QAAA,MAAM,GAAW,IAAA,gBAAM,GAAE,CAAC;AAC1B,QAAA,YAAY,GAAG,kBAAQ,CAAC,YAAY,CAAC,wBAAwB,EAAE;IAC1E,OAAO,EAAE,KAAK;CACf,CAAC,CAAC;AACH,cAAM,CAAC,GAAG,CAAC,kBAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;AAClC,kBAAQ,CAAC,GAAG,CACV,wBAAwB,EACxB,IAAI,uBAAQ,CACV;IACE,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;IACxD,WAAW,EAAE,kBAAU;CACxB,EACD,KAAK,EAAE,OAAgB,EAAE,IAAsB,EAAiB,EAAE;IAChE,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;QACjC,MAAM,IAAI,GAAS,IAAI,aAAI,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1B,CAAC;SAAM,CAAC;QACN,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC3B,CAAC;AACH,CAAC,CACF,CACF,CAAC","names":[],"sources":["C:\\Github\\Algoo\\backend\\src\\auth.ts"],"sourcesContent":["import { JWT_SECRET } from './const';\nimport { UserDTO } from '@defferrard/algoo-core/src/dto';\nimport { User } from '@defferrard/algoo-core/src/socket';\nimport { Router } from 'express';\nimport passport from 'passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\n\nconst PASSPORT_JWT_STRATEGY_ID = 'jwt';\n\nexport const router: Router = Router();\nexport const authenticate = passport.authenticate(PASSPORT_JWT_STRATEGY_ID, {\n  session: false,\n});\nrouter.use(passport.initialize());\npassport.use(\n  PASSPORT_JWT_STRATEGY_ID,\n  new Strategy(\n    {\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: JWT_SECRET,\n    },\n    async (payload: UserDTO, done: VerifiedCallback): Promise<void> => {\n      if (payload.uuid && payload.name) {\n        const USER: User = new User(payload);\n        return done(null, USER);\n      } else {\n        return done(null, false);\n      }\n    },\n  ),\n);\n"],"version":3}