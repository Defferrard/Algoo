cf21f73a062d17df9129ad3618a7a497
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = init;
const socket_controllers_1 = require("socket-controllers");
const socket_io_1 = require("socket.io");
const typedi_1 = require("typedi");
const auth_1 = require("~/auth");
function init(httpServer) {
    const io = new socket_io_1.Server(httpServer, {
        path: '/socket.io',
    });
    typedi_1.Container.set(socket_io_1.Server, io);
    io.engine.use((req, res, next) => {
        const isHandshake = req._query.sid === undefined;
        if (isHandshake) {
            (0, auth_1.authenticate)(req, res, next);
        }
        else {
            next();
        }
    });
    new socket_controllers_1.SocketControllers({
        io: io,
        container: typedi_1.Container,
        controllers: [__dirname + '/socket/controllers/*Ctrl.*'],
    });
    return io;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXEdpdGh1YlxcQWxnb29cXGJhY2tlbmRcXHNyY1xcc29ja2V0aW8udHMiLCJtYXBwaW5ncyI6Ijs7QUFPQSx1QkE0QkM7QUFqQ0QsMkRBQXVEO0FBQ3ZELHlDQUFtQztBQUNuQyxtQ0FBbUM7QUFDbkMsaUNBQXNDO0FBRXRDLFNBQXdCLElBQUksQ0FBQyxVQUF1QjtJQUNsRCxNQUFNLEVBQUUsR0FBVyxJQUFJLGtCQUFNLENBQUMsVUFBVSxFQUFFO1FBQ3hDLElBQUksRUFBRSxZQUFZO0tBQ25CLENBQUMsQ0FBQztJQUNILGtCQUFTLENBQUMsR0FBRyxDQUFDLGtCQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDMUIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQ1gsQ0FDRSxHQUVDLEVBQ0QsR0FBYSxFQUNiLElBQWtCLEVBQ2xCLEVBQUU7UUFDRixNQUFNLFdBQVcsR0FBWSxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxTQUFTLENBQUM7UUFDMUQsSUFBSSxXQUFXLEVBQUUsQ0FBQztZQUNoQixJQUFBLG1CQUFZLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMvQixDQUFDO2FBQU0sQ0FBQztZQUNOLElBQUksRUFBRSxDQUFDO1FBQ1QsQ0FBQztJQUNILENBQUMsQ0FDRixDQUFDO0lBRUYsSUFBSSxzQ0FBaUIsQ0FBQztRQUNwQixFQUFFLEVBQUUsRUFBRTtRQUNOLFNBQVMsRUFBRSxrQkFBUztRQUNwQixXQUFXLEVBQUUsQ0FBQyxTQUFTLEdBQUcsNkJBQTZCLENBQUM7S0FDekQsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxFQUFFLENBQUM7QUFDWixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXEFsZ29vXFxiYWNrZW5kXFxzcmNcXHNvY2tldGlvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRGdW5jdGlvbiwgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB0eXBlIHsgU2VydmVyIGFzIEhUVFBTU2VydmVyIH0gZnJvbSAnaHR0cCc7XG5pbXBvcnQgeyBTb2NrZXRDb250cm9sbGVycyB9IGZyb20gJ3NvY2tldC1jb250cm9sbGVycyc7XG5pbXBvcnQgeyBTZXJ2ZXIgfSBmcm9tICdzb2NrZXQuaW8nO1xuaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSAndHlwZWRpJztcbmltcG9ydCB7IGF1dGhlbnRpY2F0ZSB9IGZyb20gJ34vYXV0aCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoaHR0cFNlcnZlcjogSFRUUFNTZXJ2ZXIpOiBTZXJ2ZXIge1xuICBjb25zdCBpbzogU2VydmVyID0gbmV3IFNlcnZlcihodHRwU2VydmVyLCB7XG4gICAgcGF0aDogJy9zb2NrZXQuaW8nLFxuICB9KTtcbiAgQ29udGFpbmVyLnNldChTZXJ2ZXIsIGlvKTtcbiAgaW8uZW5naW5lLnVzZShcbiAgICAoXG4gICAgICByZXE6IFJlcXVlc3QgJiB7XG4gICAgICAgIF9xdWVyeTogeyBzaWQ6IHN0cmluZyB8IHVuZGVmaW5lZCB9O1xuICAgICAgfSxcbiAgICAgIHJlczogUmVzcG9uc2UsXG4gICAgICBuZXh0OiBOZXh0RnVuY3Rpb24sXG4gICAgKSA9PiB7XG4gICAgICBjb25zdCBpc0hhbmRzaGFrZTogYm9vbGVhbiA9IHJlcS5fcXVlcnkuc2lkID09PSB1bmRlZmluZWQ7XG4gICAgICBpZiAoaXNIYW5kc2hha2UpIHtcbiAgICAgICAgYXV0aGVudGljYXRlKHJlcSwgcmVzLCBuZXh0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHQoKTtcbiAgICAgIH1cbiAgICB9LFxuICApO1xuXG4gIG5ldyBTb2NrZXRDb250cm9sbGVycyh7XG4gICAgaW86IGlvLFxuICAgIGNvbnRhaW5lcjogQ29udGFpbmVyLFxuICAgIGNvbnRyb2xsZXJzOiBbX19kaXJuYW1lICsgJy9zb2NrZXQvY29udHJvbGxlcnMvKkN0cmwuKiddLFxuICB9KTtcbiAgcmV0dXJuIGlvO1xufVxuIl0sInZlcnNpb24iOjN9