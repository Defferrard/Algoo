5b05679eb7f9caa82c48cb492d4c6006
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameRoomRepository = void 0;
const GameManagerDTO_1 = require("@defferrard/algoo-core/src/dto/GameManagerDTO");
const game_1 = require("@defferrard/algoo-core/src/game");
const typedi_1 = require("typedi");
const DELETE_ROOM_TIMEOUT = {
    key: 'delete_room_timeout',
    value: 60_000,
};
const START_GAME_TIMEOUT = {
    key: 'start_game_timeout',
    value: 5_000,
};
let GameRoomRepository = class GameRoomRepository {
    _rooms;
    _timeouts; // 1st Key = Room UUID, 2nd Key = Timeout Type
    constructor() {
        this._rooms = {};
        this._timeouts = {};
    }
    get rooms() {
        return Object.values(this._rooms);
    }
    push(room) {
        this._rooms[room.uuid] = room;
        this._timeouts[room.uuid] = {};
    }
    delete(uuid) {
        delete this._rooms[uuid];
        for (let timeout of Object.values(this._timeouts[uuid])) {
            clearTimeout(timeout);
        }
        delete this._timeouts[uuid];
    }
    get(roomUuid) {
        return this._rooms[roomUuid];
    }
    addPlayer(roomUuid, player) {
        this.get(roomUuid).addPlayer(player);
        clearTimeout(this._timeouts[roomUuid][DELETE_ROOM_TIMEOUT.key]);
    }
    removePlayer(roomUuid, uuid) {
        let gameRoom = this.get(roomUuid);
        if (!gameRoom) {
            return;
        }
        gameRoom.removePlayer(uuid);
        if (gameRoom.playersCount === 0) {
            this._timeouts[roomUuid][DELETE_ROOM_TIMEOUT.key] = setTimeout(() => {
                if (gameRoom.playersCount === 0) {
                    gameRoom.state = game_1.GameRoomState.DONE;
                    this.delete(roomUuid);
                }
            }, DELETE_ROOM_TIMEOUT.value);
        }
    }
    setPlayerReady(roomUuid, playerUuid, isReady) {
        let gameRoom = this.get(roomUuid);
        if (!gameRoom) {
            return false;
        }
        return gameRoom.setPlayerReady(playerUuid, isReady);
    }
    startGame(roomUuid, next, delay = START_GAME_TIMEOUT.value) {
        let gameRoom = this.get(roomUuid);
        if (!gameRoom) {
            return -1;
        }
        this._timeouts[roomUuid][START_GAME_TIMEOUT.key] = setTimeout(() => {
            const dto = new GameManagerDTO_1.GameManagerDTO();
            dto.tiles = (0, game_1.generateRandomBoard)(10, 10, 0.1);
            gameRoom.startGame();
            next(dto);
        }, delay);
        return delay;
    }
    cancelStartGame(roomUuid, next) {
        if (this._timeouts[roomUuid][START_GAME_TIMEOUT.key]) {
            clearTimeout(this._timeouts[roomUuid][START_GAME_TIMEOUT.key]);
            delete this._timeouts[roomUuid][START_GAME_TIMEOUT.key];
            next();
        }
    }
};
exports.GameRoomRepository = GameRoomRepository;
exports.GameRoomRepository = GameRoomRepository = __decorate([
    (0, typedi_1.Service)(),
    __metadata("design:paramtypes", [])
], GameRoomRepository);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXEdpdGh1YlxcQWxnb29cXGJhY2tlbmRcXHNyY1xccmVwb3NpdG9yaWVzXFxHYW1lUm9vbVJlcG9zaXRvcnkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsa0ZBQStFO0FBRS9FLDBEQUFvSDtBQUNwSCxtQ0FBaUM7QUFPakMsTUFBTSxtQkFBbUIsR0FBaUI7SUFDeEMsR0FBRyxFQUFFLHFCQUFxQjtJQUMxQixLQUFLLEVBQUUsTUFBTTtDQUNkLENBQUM7QUFDRixNQUFNLGtCQUFrQixHQUFpQjtJQUN2QyxHQUFHLEVBQUUsb0JBQW9CO0lBQ3pCLEtBQUssRUFBRSxLQUFLO0NBQ2IsQ0FBQztBQUdLLElBQU0sa0JBQWtCLEdBQXhCLE1BQU0sa0JBQWtCO0lBQ1osTUFBTSxDQUE4QjtJQUNwQyxTQUFTLENBRXhCLENBQUMsOENBQThDO0lBRWpEO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFjO1FBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztRQUM5QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixLQUFLLElBQUksT0FBTyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDeEQsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3hCLENBQUM7UUFD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UyxDQUFDLFFBQVEsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3hELElBQUksRUFBRSxDQUFDO1FBQ1QsQ0FBQztJQUNILENBQUM7Q0FDRixDQUFBO0FBbkZZLGdEQUFrQjs2QkFBbEIsa0JBQWtCO0lBRDlCLElBQUEsZ0JBQU8sR0FBRTs7R0FDRyxrQkFBa0IsQ0FtRjlCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXEFsZ29vXFxiYWNrZW5kXFxzcmNcXHJlcG9zaXRvcmllc1xcR2FtZVJvb21SZXBvc2l0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhbWVNYW5hZ2VyRFRPIH0gZnJvbSAnQGRlZmZlcnJhcmQvYWxnb28tY29yZS9zcmMvZHRvL0dhbWVNYW5hZ2VyRFRPJztcbmltcG9ydCB7IEdhbWVSb29tTm90Rm91bmRFeGNlcHRpb24gfSBmcm9tICdAZGVmZmVycmFyZC9hbGdvby1jb3JlL3NyYy9leGNlcHRpb25zL2dhbWVSb29tJztcbmltcG9ydCB7IEdhbWVNYW5hZ2VyLCBHYW1lUm9vbSwgR2FtZVJvb21TdGF0ZSwgUGxheWVyLCBnZW5lcmF0ZVJhbmRvbUJvYXJkIH0gZnJvbSAnQGRlZmZlcnJhcmQvYWxnb28tY29yZS9zcmMvZ2FtZSc7XG5pbXBvcnQgeyBTZXJ2aWNlIH0gZnJvbSAndHlwZWRpJztcblxudHlwZSBUaW1lb3V0Q29uc3QgPSB7XG4gIGtleTogc3RyaW5nO1xuICB2YWx1ZTogbnVtYmVyO1xufTtcblxuY29uc3QgREVMRVRFX1JPT01fVElNRU9VVDogVGltZW91dENvbnN0ID0ge1xuICBrZXk6ICdkZWxldGVfcm9vbV90aW1lb3V0JyxcbiAgdmFsdWU6IDYwXzAwMCxcbn07XG5jb25zdCBTVEFSVF9HQU1FX1RJTUVPVVQ6IFRpbWVvdXRDb25zdCA9IHtcbiAga2V5OiAnc3RhcnRfZ2FtZV90aW1lb3V0JyxcbiAgdmFsdWU6IDVfMDAwLFxufTtcblxuQFNlcnZpY2UoKVxuZXhwb3J0IGNsYXNzIEdhbWVSb29tUmVwb3NpdG9yeSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgX3Jvb21zOiB7IFtrZXk6IHN0cmluZ106IEdhbWVSb29tIH07XG4gIHByaXZhdGUgcmVhZG9ubHkgX3RpbWVvdXRzOiB7XG4gICAgW2tleTogc3RyaW5nXTogeyBba2V5OiBzdHJpbmddOiBOb2RlSlMuVGltZW91dCB9O1xuICB9OyAvLyAxc3QgS2V5ID0gUm9vbSBVVUlELCAybmQgS2V5ID0gVGltZW91dCBUeXBlXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fcm9vbXMgPSB7fTtcbiAgICB0aGlzLl90aW1lb3V0cyA9IHt9O1xuICB9XG5cbiAgZ2V0IHJvb21zKCk6IEdhbWVSb29tW10ge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX3Jvb21zKTtcbiAgfVxuXG4gIHB1c2gocm9vbTogR2FtZVJvb20pOiB2b2lkIHtcbiAgICB0aGlzLl9yb29tc1tyb29tLnV1aWRdID0gcm9vbTtcbiAgICB0aGlzLl90aW1lb3V0c1tyb29tLnV1aWRdID0ge307XG4gIH1cblxuICBkZWxldGUodXVpZDogc3RyaW5nKTogdm9pZCB7XG4gICAgZGVsZXRlIHRoaXMuX3Jvb21zW3V1aWRdO1xuICAgIGZvciAobGV0IHRpbWVvdXQgb2YgT2JqZWN0LnZhbHVlcyh0aGlzLl90aW1lb3V0c1t1dWlkXSkpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICB9XG4gICAgZGVsZXRlIHRoaXMuX3RpbWVvdXRzW3V1aWRdO1xuICB9XG5cbiAgZ2V0KHJvb21VdWlkOiBzdHJpbmcpOiBHYW1lUm9vbSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuX3Jvb21zW3Jvb21VdWlkXTtcbiAgfVxuXG4gIGFkZFBsYXllcihyb29tVXVpZDogc3RyaW5nLCBwbGF5ZXI6IFBsYXllcik6IHZvaWQge1xuICAgIHRoaXMuZ2V0KHJvb21VdWlkKSEuYWRkUGxheWVyKHBsYXllcik7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXRzW3Jvb21VdWlkXVtERUxFVEVfUk9PTV9USU1FT1VULmtleV0pO1xuICB9XG5cbiAgcmVtb3ZlUGxheWVyKHJvb21VdWlkOiBzdHJpbmcsIHV1aWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGxldCBnYW1lUm9vbSA9IHRoaXMuZ2V0KHJvb21VdWlkKTtcbiAgICBpZiAoIWdhbWVSb29tKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGdhbWVSb29tLnJlbW92ZVBsYXllcih1dWlkKTtcblxuICAgIGlmIChnYW1lUm9vbS5wbGF5ZXJzQ291bnQgPT09IDApIHtcbiAgICAgIHRoaXMuX3RpbWVvdXRzW3Jvb21VdWlkXVtERUxFVEVfUk9PTV9USU1FT1VULmtleV0gPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKGdhbWVSb29tLnBsYXllcnNDb3VudCA9PT0gMCkge1xuICAgICAgICAgIGdhbWVSb29tLnN0YXRlID0gR2FtZVJvb21TdGF0ZS5ET05FO1xuICAgICAgICAgIHRoaXMuZGVsZXRlKHJvb21VdWlkKTtcbiAgICAgICAgfVxuICAgICAgfSwgREVMRVRFX1JPT01fVElNRU9VVC52YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgc2V0UGxheWVyUmVhZHkocm9vbVV1aWQ6IHN0cmluZywgcGxheWVyVXVpZDogc3RyaW5nLCBpc1JlYWR5OiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgbGV0IGdhbWVSb29tID0gdGhpcy5nZXQocm9vbVV1aWQpO1xuICAgIGlmICghZ2FtZVJvb20pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGdhbWVSb29tLnNldFBsYXllclJlYWR5KHBsYXllclV1aWQsIGlzUmVhZHkpO1xuICB9XG5cbiAgc3RhcnRHYW1lKHJvb21VdWlkOiBzdHJpbmcsIG5leHQ6IChkYXRhOiBhbnkpID0+IHZvaWQsIGRlbGF5OiBudW1iZXIgPSBTVEFSVF9HQU1FX1RJTUVPVVQudmFsdWUpOiBudW1iZXIge1xuICAgIGxldCBnYW1lUm9vbSA9IHRoaXMuZ2V0KHJvb21VdWlkKTtcbiAgICBpZiAoIWdhbWVSb29tKSB7XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHRoaXMuX3RpbWVvdXRzW3Jvb21VdWlkXVtTVEFSVF9HQU1FX1RJTUVPVVQua2V5XSA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgZHRvID0gbmV3IEdhbWVNYW5hZ2VyRFRPKCk7XG4gICAgICBkdG8udGlsZXMgPSBnZW5lcmF0ZVJhbmRvbUJvYXJkKDEwLCAxMCwgMC4xKTtcbiAgICAgIGdhbWVSb29tLnN0YXJ0R2FtZSgpO1xuICAgICAgbmV4dChkdG8pO1xuICAgIH0sIGRlbGF5KTtcbiAgICByZXR1cm4gZGVsYXk7XG4gIH1cblxuICBjYW5jZWxTdGFydEdhbWUocm9vbVV1aWQ6IHN0cmluZywgbmV4dDogKCkgPT4gdm9pZCk6IHZvaWQge1xuICAgIGlmICh0aGlzLl90aW1lb3V0c1tyb29tVXVpZF1bU1RBUlRfR0FNRV9USU1FT1VULmtleV0pIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0c1tyb29tVXVpZF1bU1RBUlRfR0FNRV9USU1FT1VULmtleV0pO1xuICAgICAgZGVsZXRlIHRoaXMuX3RpbWVvdXRzW3Jvb21VdWlkXVtTVEFSVF9HQU1FX1RJTUVPVVQua2V5XTtcbiAgICAgIG5leHQoKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==