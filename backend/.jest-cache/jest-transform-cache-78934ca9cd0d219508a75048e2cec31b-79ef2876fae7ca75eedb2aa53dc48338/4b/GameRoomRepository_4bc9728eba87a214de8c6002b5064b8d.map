{"file":"C:\\Github\\Algoo\\backend\\src\\repositories\\GameRoomRepository.ts","mappings":"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","names":[],"sources":["C:\\Github\\Algoo\\backend\\src\\repositories\\GameRoomRepository.ts"],"sourcesContent":["import { GameManagerDTO } from '@defferrard/algoo-core/src/dto/GameManagerDTO';\nimport { GameRoomNotFoundException } from '@defferrard/algoo-core/src/exceptions/gameRoom';\nimport { GameManager, GameRoom, GameRoomState, Player, generateRandomBoard } from '@defferrard/algoo-core/src/game';\nimport { Service } from 'typedi';\n\ntype TimeoutConst = {\n  key: string;\n  value: number;\n};\n\nconst DELETE_ROOM_TIMEOUT: TimeoutConst = {\n  key: 'delete_room_timeout',\n  value: 60_000,\n};\nconst START_GAME_TIMEOUT: TimeoutConst = {\n  key: 'start_game_timeout',\n  value: 5_000,\n};\n\n@Service()\nexport class GameRoomRepository {\n  private readonly _rooms: { [key: string]: GameRoom };\n  private readonly _timeouts: {\n    [key: string]: { [key: string]: NodeJS.Timeout };\n  }; // 1st Key = Room UUID, 2nd Key = Timeout Type\n\n  constructor() {\n    this._rooms = {};\n    this._timeouts = {};\n  }\n\n  get rooms(): GameRoom[] {\n    return Object.values(this._rooms);\n  }\n\n  push(room: GameRoom): void {\n    this._rooms[room.uuid] = room;\n    this._timeouts[room.uuid] = {};\n  }\n\n  delete(uuid: string): void {\n    delete this._rooms[uuid];\n    for (let timeout of Object.values(this._timeouts[uuid])) {\n      clearTimeout(timeout);\n    }\n    delete this._timeouts[uuid];\n  }\n\n  get(roomUuid: string): GameRoom | undefined {\n    return this._rooms[roomUuid];\n  }\n\n  addPlayer(roomUuid: string, player: Player): void {\n    this.get(roomUuid)!.addPlayer(player);\n    clearTimeout(this._timeouts[roomUuid][DELETE_ROOM_TIMEOUT.key]);\n  }\n\n  removePlayer(roomUuid: string, uuid: string): void {\n    let gameRoom = this.get(roomUuid);\n    if (!gameRoom) {\n      return;\n    }\n    gameRoom.removePlayer(uuid);\n\n    if (gameRoom.playersCount === 0) {\n      this._timeouts[roomUuid][DELETE_ROOM_TIMEOUT.key] = setTimeout(() => {\n        if (gameRoom.playersCount === 0) {\n          gameRoom.state = GameRoomState.DONE;\n          this.delete(roomUuid);\n        }\n      }, DELETE_ROOM_TIMEOUT.value);\n    }\n  }\n\n  setPlayerReady(roomUuid: string, playerUuid: string, isReady: boolean): boolean {\n    let gameRoom = this.get(roomUuid);\n    if (!gameRoom) {\n      return false;\n    }\n    return gameRoom.setPlayerReady(playerUuid, isReady);\n  }\n\n  startGame(roomUuid: string, next: (data: any) => void, delay: number = START_GAME_TIMEOUT.value): number {\n    let gameRoom = this.get(roomUuid);\n    if (!gameRoom) {\n      return -1;\n    }\n    this._timeouts[roomUuid][START_GAME_TIMEOUT.key] = setTimeout(() => {\n      const dto = new GameManagerDTO();\n      dto.tiles = generateRandomBoard(10, 10, 0.1);\n      gameRoom.startGame();\n      next(dto);\n    }, delay);\n    return delay;\n  }\n\n  cancelStartGame(roomUuid: string, next: () => void): void {\n    if (this._timeouts[roomUuid][START_GAME_TIMEOUT.key]) {\n      clearTimeout(this._timeouts[roomUuid][START_GAME_TIMEOUT.key]);\n      delete this._timeouts[roomUuid][START_GAME_TIMEOUT.key];\n      next();\n    }\n  }\n}\n"],"version":3}