{"file":"C:\\Github\\Algoo\\backend\\src\\repositories\\SocketRepository.ts","mappings":";;;;;;;;;;;;AAAA,wDAAqD;AAErD,yCAA2C;AAC3C,mCAAiC;AACjC,2CAAwC;AAE3B,QAAA,kBAAkB,GAAG,OAAO,CAAC;AAGnC,IAAM,gBAAgB,GAAtB,MAAM,gBAAgB;IACR;IAAnB,YAAmB,EAAU;QAAV,OAAE,GAAF,EAAE,CAAQ;IAAG,CAAC;IAEjC,IAAI,CAAC,MAAc,EAAE,IAAU;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,0BAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,IAAY,EAAE,KAAkB,EAAE,GAA2B;QAC3E,IAAI,CAAC;YACH,IAAI,GAAG,IAAI,GAAG,YAAY,SAAG,EAAE,CAAC;gBAC9B,MAAM,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAChD,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,eAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;CACF,CAAA;AAlBY,4CAAgB;2BAAhB,gBAAgB;IAD5B,IAAA,gBAAO,GAAE;qCAEe,kBAAM;GADlB,gBAAgB,CAkB5B","names":[],"sources":["C:\\Github\\Algoo\\backend\\src\\repositories\\SocketRepository.ts"],"sourcesContent":["import { DTO } from '@defferrard/algoo-core/src/dto';\nimport { MessageType, User } from '@defferrard/algoo-core/src/socket';\nimport { Server, Socket } from 'socket.io';\nimport { Service } from 'typedi';\nimport { LOGGER } from '~/utils/logger';\n\nexport const SOCKET_ROOM_PREFIX = 'user:';\n\n@Service()\nexport class SocketRepository {\n  constructor(public io: Server) {}\n\n  save(socket: Socket, user: User) {\n    socket.data.user = user;\n    socket.join(SOCKET_ROOM_PREFIX + user.uuid);\n  }\n\n  async broadcast(room: string, event: MessageType, dto?: DTO | string | number) {\n    try {\n      if (dto && dto instanceof DTO) {\n        await dto.validateOrReject();\n      }\n      this.io.of(`/rooms/${room}`).emit(event, dto);\n    } catch (e) {\n      LOGGER.error(e);\n    }\n  }\n}\n"],"version":3}