{"file":"C:\\Github\\Algoo\\core\\src\\game\\GameManager.ts","mappings":"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","names":[],"sources":["C:\\Github\\Algoo\\core\\src\\game\\GameManager.ts"],"sourcesContent":["import type { Coordinate, SimpleCoordinate } from '../board/';\nimport { Board, Entity, TileType } from '../board/';\nimport type { GameManagerDTO } from '../dto/GameManagerDTO';\nimport { TeamAlreadyExistsException, TeamNotEmptyException, TeamNotExistsException } from '../exceptions';\nimport { InvalidEntityException } from '../exceptions/gameManager';\nimport { ActionResume } from '../strategy';\nimport { notUndefined } from '../utils/assertions';\nimport type { Resources, Spell, StandardResources } from './';\nimport { HeroEntity, ResourceType, Team } from './';\nimport { isHeroEntity } from './hero/HeroEntity';\n\nexport function generateRandomBoard(width: number, height: number, wallProbability: number): TileType[][] {\n  let map: TileType[][] = [];\n  for (let y = 0; y < height; y++) {\n    map[y] = new Array(width);\n    for (let x = 0; x < width; x++) {\n      map[y][x] = Math.random() < wallProbability ? TileType.Wall : TileType.Floor;\n    }\n  }\n\n  return map;\n}\n\nexport default class GameManager {\n  // Whether the client is currently animating.\n  // TODO : Use a buffer !\n  private readonly _board: Board;\n  private _turnIndex: number = 0;\n  private _teams: Team[] = [];\n  private _entities: { [key in string]: Entity<Resources> } = {};\n\n  constructor(dto: GameManagerDTO) {\n    this._board = new Board(dto.tiles);\n  }\n\n  pushTeam(team: Team): void {\n    if (this._teams.find((t) => t.uuid === team.uuid)) {\n      throw new TeamAlreadyExistsException(team);\n    }\n    if (team.entities.length > 0) {\n      throw new TeamNotEmptyException(team);\n    }\n    this._teams.push(team);\n  }\n\n  pushEntity(entity: Entity<Resources>, coordinate: Coordinate): void {\n    if (!entity.team) throw new InvalidEntityException(entity);\n\n    const TEAM = this._teams.find((t) => t.uuid === entity.team?.uuid)!;\n    if (!TEAM) throw new TeamNotExistsException(TEAM);\n\n    this._board.pushEntity(entity, coordinate);\n    TEAM.pushEntity(entity);\n  }\n\n  moveEntity(entity: Entity<Resources>, path: SimpleCoordinate[]): void {\n    if (!Object.hasOwn(entity.resources, ResourceType.STAMINA)) throw new InvalidEntityException(entity);\n\n    while (path.length > 0) {\n      let coordinate = path.pop()!;\n      this.moveEntityTo(entity, coordinate);\n    }\n  }\n\n  protected moveEntityTo(entity: Entity<Resources>, coordinate: SimpleCoordinate): void {\n    this._board.moveEntity(entity, coordinate);\n    entity.resources[ResourceType.STAMINA]! += this._board.getTile(coordinate).movementCost;\n  }\n\n  deleteEntity(entity: Entity<Resources>): void {\n    this._teams.find((t) => t.entities.find((e) => e.uuid === entity.uuid)!)!.deleteEntity(entity);\n    this._board.deleteEntity(entity);\n  }\n\n  castSpell(spell: Spell, coordinate: SimpleCoordinate): ActionResume[] {\n    const CASTER: Entity<Resources> = this.currentHero!;\n    return spell.cast(CASTER, this.board.getEntityCoordinate(CASTER), coordinate, this.board);\n  }\n\n  nextTurn(): void {\n    // TODO : Better Event Handler\n    notUndefined(this.currentHero).onEndTurn();\n    this._turnIndex++;\n  }\n\n  get currentEntity(): Entity<Resources> | undefined {\n    if (this._teams.length <= 0) return undefined;\n    const TEAM_INDEX = this._turnIndex % this._teams.length;\n    if (this._teams[TEAM_INDEX].entities.length <= 0) return undefined;\n    const HERO_INDEX = Math.floor((this._turnIndex / this._teams.length) % this._teams[TEAM_INDEX].entities.length);\n    return this._teams[TEAM_INDEX].entities[HERO_INDEX];\n  }\n\n  get currentHero(): HeroEntity | undefined {\n    const currentEntity = this.currentEntity;\n    if (isHeroEntity(currentEntity)) return currentEntity;\n  }\n\n  get board(): Board {\n    return this._board;\n  }\n}\n"],"version":3}