{"file":"C:\\Github\\Algoo\\backend\\src\\services\\AuthService.ts","mappings":";;;;;;;;;;;;AAAA,8DAAyD;AACzD,gEAA+B;AAC/B,mCAAiC;AACjC,+BAAkC;AAClC,mCAAqC;AAG9B,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,MAAM,CAAC,QAAgB;QACrB,MAAM,IAAI,GAAG,IAAI,aAAI,CAAC,EAAE,IAAI,EAAE,IAAA,SAAI,GAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxD,OAAO,sBAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,kBAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAChE,CAAC;CACF,CAAA;AALY,kCAAW;sBAAX,WAAW;IADvB,IAAA,gBAAO,GAAE;GACG,WAAW,CAKvB","names":[],"sources":["C:\\Github\\Algoo\\backend\\src\\services\\AuthService.ts"],"sourcesContent":["import { User } from '@defferrard/algoo-core/src/socket';\nimport jwt from 'jsonwebtoken';\nimport { Service } from 'typedi';\nimport { v4 as uuid } from 'uuid';\nimport { JWT_SECRET } from '~/const';\n\n@Service()\nexport class AuthService {\n  signIn(username: string) {\n    const user = new User({ uuid: uuid(), name: username });\n    return jwt.sign({ ...user }, JWT_SECRET, { expiresIn: '1h' });\n  }\n}\n"],"version":3}