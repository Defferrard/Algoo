e7a5bc132f29ecff80892c260ec64f0a
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthCtrl = void 0;
const dto_1 = require("@defferrard/algoo-core/src/dto");
const UsernameDTO_1 = require("@defferrard/algoo-core/src/dto/UsernameDTO");
const socket_1 = require("@defferrard/algoo-core/src/socket");
const routing_controllers_1 = require("routing-controllers");
const typedi_1 = require("typedi");
const AuthService_1 = require("~/services/AuthService");
const SerializeResponse_1 = require("~/utils/SerializeResponse");
let AuthCtrl = class AuthCtrl {
    service;
    constructor(service) {
        this.service = service;
    }
    async login(user) {
        return { jwt: this.service.signIn(user.name) };
    }
    async getSession(user) {
        return user;
    }
};
exports.AuthCtrl = AuthCtrl;
__decorate([
    (0, routing_controllers_1.Post)(),
    (0, SerializeResponse_1.SerializeResponse)(dto_1.JwtDTO),
    __param(0, (0, routing_controllers_1.Body)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [UsernameDTO_1.UsernameDTO]),
    __metadata("design:returntype", Promise)
], AuthCtrl.prototype, "login", null);
__decorate([
    (0, routing_controllers_1.Get)('/current'),
    (0, routing_controllers_1.Authorized)(),
    (0, SerializeResponse_1.SerializeResponse)(dto_1.UserDTO),
    __param(0, (0, routing_controllers_1.CurrentUser)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [socket_1.User]),
    __metadata("design:returntype", Promise)
], AuthCtrl.prototype, "getSession", null);
exports.AuthCtrl = AuthCtrl = __decorate([
    (0, typedi_1.Service)(),
    (0, routing_controllers_1.JsonController)('/auth'),
    __metadata("design:paramtypes", [AuthService_1.AuthService])
], AuthCtrl);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXEdpdGh1YlxcQWxnb29cXGJhY2tlbmRcXHNyY1xcY29udHJvbGxlcnNcXEF1dGhDdHJsLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHdEQUFpRTtBQUNqRSw0RUFBeUU7QUFDekUsOERBQXlEO0FBQ3pELDZEQUErRjtBQUMvRixtQ0FBaUM7QUFDakMsd0RBQXFEO0FBQ3JELGlFQUE4RDtBQUl2RCxJQUFNLFFBQVEsR0FBZCxNQUFNLFFBQVE7SUFDQTtJQUFuQixZQUFtQixPQUFvQjtRQUFwQixZQUFPLEdBQVAsT0FBTyxDQUFhO0lBQUcsQ0FBQztJQUlyQyxBQUFOLEtBQUssQ0FBQyxLQUFLLENBQVMsSUFBaUI7UUFDbkMsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBS0ssQUFBTixLQUFLLENBQUMsVUFBVSxDQUFnQixJQUFVO1FBQ3hDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGLENBQUE7QUFmWSw0QkFBUTtBQUtiO0lBRkwsSUFBQSwwQkFBSSxHQUFFO0lBQ04sSUFBQSxxQ0FBaUIsRUFBQyxZQUFNLENBQUM7SUFDYixXQUFBLElBQUEsMEJBQUksR0FBRSxDQUFBOztxQ0FBTyx5QkFBVzs7cUNBRXBDO0FBS0s7SUFITCxJQUFBLHlCQUFHLEVBQUMsVUFBVSxDQUFDO0lBQ2YsSUFBQSxnQ0FBVSxHQUFFO0lBQ1osSUFBQSxxQ0FBaUIsRUFBQyxhQUFPLENBQUM7SUFDVCxXQUFBLElBQUEsaUNBQVcsR0FBRSxDQUFBOztxQ0FBTyxhQUFJOzswQ0FFekM7bUJBZFUsUUFBUTtJQUZwQixJQUFBLGdCQUFPLEdBQUU7SUFDVCxJQUFBLG9DQUFjLEVBQUMsT0FBTyxDQUFDO3FDQUVNLHlCQUFXO0dBRDVCLFFBQVEsQ0FlcEIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXEdpdGh1YlxcQWxnb29cXGJhY2tlbmRcXHNyY1xcY29udHJvbGxlcnNcXEF1dGhDdHJsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEp3dERUTywgVXNlckRUTyB9IGZyb20gJ0BkZWZmZXJyYXJkL2FsZ29vLWNvcmUvc3JjL2R0byc7XG5pbXBvcnQgeyBVc2VybmFtZURUTyB9IGZyb20gJ0BkZWZmZXJyYXJkL2FsZ29vLWNvcmUvc3JjL2R0by9Vc2VybmFtZURUTyc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnQGRlZmZlcnJhcmQvYWxnb28tY29yZS9zcmMvc29ja2V0JztcbmltcG9ydCB7IEF1dGhvcml6ZWQsIEJvZHksIEN1cnJlbnRVc2VyLCBHZXQsIEpzb25Db250cm9sbGVyLCBQb3N0IH0gZnJvbSAncm91dGluZy1jb250cm9sbGVycyc7XG5pbXBvcnQgeyBTZXJ2aWNlIH0gZnJvbSAndHlwZWRpJztcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSAnfi9zZXJ2aWNlcy9BdXRoU2VydmljZSc7XG5pbXBvcnQgeyBTZXJpYWxpemVSZXNwb25zZSB9IGZyb20gJ34vdXRpbHMvU2VyaWFsaXplUmVzcG9uc2UnO1xuXG5AU2VydmljZSgpXG5ASnNvbkNvbnRyb2xsZXIoJy9hdXRoJylcbmV4cG9ydCBjbGFzcyBBdXRoQ3RybCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzZXJ2aWNlOiBBdXRoU2VydmljZSkge31cblxuICBAUG9zdCgpXG4gIEBTZXJpYWxpemVSZXNwb25zZShKd3REVE8pXG4gIGFzeW5jIGxvZ2luKEBCb2R5KCkgdXNlcjogVXNlcm5hbWVEVE8pIHtcbiAgICByZXR1cm4geyBqd3Q6IHRoaXMuc2VydmljZS5zaWduSW4odXNlci5uYW1lKSB9O1xuICB9XG5cbiAgQEdldCgnL2N1cnJlbnQnKVxuICBAQXV0aG9yaXplZCgpXG4gIEBTZXJpYWxpemVSZXNwb25zZShVc2VyRFRPKVxuICBhc3luYyBnZXRTZXNzaW9uKEBDdXJyZW50VXNlcigpIHVzZXI6IFVzZXIpIHtcbiAgICByZXR1cm4gdXNlcjtcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9