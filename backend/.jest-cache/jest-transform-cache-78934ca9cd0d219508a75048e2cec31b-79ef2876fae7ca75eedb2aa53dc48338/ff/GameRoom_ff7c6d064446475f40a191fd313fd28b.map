{"file":"C:\\Github\\Algoo\\core\\src\\game\\GameRoom.ts","mappings":"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","names":[],"sources":["C:\\Github\\Algoo\\core\\src\\game\\GameRoom.ts"],"sourcesContent":["import { DTOFriendly } from '../dto';\nimport { SimpleGameRoomDTO } from '../dto/';\nimport { FullGameRoomException, PlayerAlreadyInGameRoomException } from '../exceptions/gameRoom';\nimport { GameManager, Player } from './index';\nimport { v4 as uuidV4 } from 'uuid';\n\nexport enum GameRoomState {\n  LOBBY,\n  PLAYING,\n  DONE,\n}\n\nconst DEFAULT_ROOM_SIZE = 2;\nexport default class GameRoom implements DTOFriendly<SimpleGameRoomDTO> {\n  readonly uuid: string;\n  maxPlayers: number;\n  state: GameRoomState;\n  readonly players: { [key: string]: Player }; // Key = Player UUID = Team UUID\n  owner?: Player;\n\n  constructor(maxPlayers: number = DEFAULT_ROOM_SIZE, uuid: string = uuidV4()) {\n    this.uuid = uuid;\n    this.state = GameRoomState.LOBBY;\n    this.players = {};\n    this.maxPlayers = maxPlayers;\n  }\n\n  toDTO() {\n    const dto = new SimpleGameRoomDTO();\n    dto.uuid = this.uuid;\n    dto.maxPlayers = this.maxPlayers;\n    dto.currentPlayers = this.playersCount;\n    dto.state = this.state;\n    dto.owner = this.owner?.user.toDTO();\n    return dto;\n  }\n\n  get playersCount(): number {\n    return Object.keys(this.players).length;\n  }\n\n  addPlayer(player: Player): void {\n    if (this.playersCount >= this.maxPlayers) {\n      throw new FullGameRoomException(this.uuid);\n    }\n    if (this.players[player.user.uuid]) {\n      throw new PlayerAlreadyInGameRoomException(player.user.uuid, this.uuid);\n    }\n    this.players[player.user.uuid] = player;\n    if (!this.owner) {\n      this.owner = player;\n    }\n  }\n\n  removePlayer(uuid: string) {\n    const player = this.players[uuid];\n    delete this.players[uuid];\n    if (this.owner?.user.uuid === uuid) {\n      this.owner = Object.values(this.players)[0];\n    }\n    return player;\n  }\n\n  getPlayer(uuid: string): Player | undefined {\n    return this.players[uuid];\n  }\n\n  /**\n   * Set the player ready and return true if all players are ready\n   * @param uuid Player UUID\n   * @param isReady Player ready state\n   */\n  setPlayerReady(uuid: string, isReady: boolean): boolean {\n    this.players[uuid].isReady = isReady;\n    return Object.values(this.players).every((player) => player.isReady);\n  }\n\n  startGame(): void {\n    this.state = GameRoomState.PLAYING;\n  }\n}\n"],"version":3}