3a8dd092937a7f0617bbf6df66497c30
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameRoomCtrl = void 0;
const dto_1 = require("@defferrard/algoo-core/src/dto");
const socket_1 = require("@defferrard/algoo-core/src/socket");
const assertions_1 = require("@defferrard/algoo-core/src/utils/assertions");
const class_validator_1 = require("class-validator");
const socket_controllers_1 = require("socket-controllers");
const socket_io_1 = require("socket.io");
const typedi_1 = require("typedi");
const GameRoomService_1 = __importDefault(require("~/services/GameRoomService"));
const logger_1 = require("~/utils/logger");
const GAME_ROOM_UUID = 'gameRoomUUID';
let GameRoomCtrl = class GameRoomCtrl {
    service;
    constructor(service) {
        this.service = service;
    }
    onJoinRoom(socket, req, room) {
        if (!(0, class_validator_1.isUUID)(room)) {
            return socket.disconnect();
        }
        logger_1.LOGGER.info(`Socket ${socket.id} connected`);
        (0, assertions_1.assertNonNull)(req.user);
        const user = req.user;
        return this.service.joinRoom(socket, user, room);
    }
    onLeaveRoom(socket) {
        this.service.leaveRoom(socket);
        logger_1.LOGGER.info(`Socket ${socket.id} disconnected`);
    }
    async onMessage(socket, dto) {
        logger_1.LOGGER.info(`Socket ${socket.id} sent message ${dto.message}`);
        await this.service.sendMessage(socket, dto);
    }
    onReady(socket, dto) {
        logger_1.LOGGER.info(`Socket ${socket.id} is ready: ${dto.isReady}`);
        this.service.isReady(socket, dto.isReady);
    }
};
exports.GameRoomCtrl = GameRoomCtrl;
__decorate([
    (0, socket_controllers_1.OnConnect)(),
    (0, socket_controllers_1.EmitOnSuccess)(socket_1.MessageType.PUT_GAME_ROOM),
    __param(0, (0, socket_controllers_1.ConnectedSocket)()),
    __param(1, (0, socket_controllers_1.SocketRequest)()),
    __param(2, (0, socket_controllers_1.NspParam)(GAME_ROOM_UUID)),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [socket_io_1.Socket, Object, String]),
    __metadata("design:returntype", void 0)
], GameRoomCtrl.prototype, "onJoinRoom", null);
__decorate([
    (0, socket_controllers_1.OnDisconnect)(),
    __param(0, (0, socket_controllers_1.ConnectedSocket)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [socket_io_1.Socket]),
    __metadata("design:returntype", void 0)
], GameRoomCtrl.prototype, "onLeaveRoom", null);
__decorate([
    (0, socket_controllers_1.OnMessage)(socket_1.MessageType.GAME_ROOM_MESSAGE),
    __param(0, (0, socket_controllers_1.ConnectedSocket)()),
    __param(1, (0, socket_controllers_1.MessageBody)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [socket_io_1.Socket, dto_1.ChatMessageDTO]),
    __metadata("design:returntype", Promise)
], GameRoomCtrl.prototype, "onMessage", null);
__decorate([
    (0, socket_controllers_1.OnMessage)(socket_1.MessageType.GAME_ROOM_READY),
    __param(0, (0, socket_controllers_1.ConnectedSocket)()),
    __param(1, (0, socket_controllers_1.MessageBody)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [socket_io_1.Socket, Object]),
    __metadata("design:returntype", void 0)
], GameRoomCtrl.prototype, "onReady", null);
exports.GameRoomCtrl = GameRoomCtrl = __decorate([
    (0, typedi_1.Service)(),
    (0, socket_controllers_1.SocketController)(`/rooms/:${GAME_ROOM_UUID}`),
    __metadata("design:paramtypes", [GameRoomService_1.default])
], GameRoomCtrl);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXEdpdGh1YlxcQWxnb29cXGJhY2tlbmRcXHNyY1xcc29ja2V0XFxjb250cm9sbGVyc1xcR2FtZVJvb21DdHJsLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHdEQUFtRjtBQUNuRiw4REFBc0U7QUFDdEUsNEVBQTRFO0FBQzVFLHFEQUF5QztBQUV6QywyREFXNEI7QUFDNUIseUNBQW1DO0FBQ25DLG1DQUFpQztBQUNqQyxpRkFBeUQ7QUFDekQsMkNBQXdDO0FBRXhDLE1BQU0sY0FBYyxHQUFHLGNBQWMsQ0FBQztBQUkvQixJQUFNLFlBQVksR0FBbEIsTUFBTSxZQUFZO0lBQ0o7SUFBbkIsWUFBbUIsT0FBd0I7UUFBeEIsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7SUFBRyxDQUFDO0lBSS9DLFVBQVUsQ0FBb0IsTUFBYyxFQUFtQixHQUFZLEVBQTRCLElBQVk7UUFDakgsSUFBSSxDQUFDLElBQUEsd0JBQU0sRUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQ2xCLE9BQU8sTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzdCLENBQUM7UUFDRCxlQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsTUFBTSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDN0MsSUFBQSwwQkFBYSxFQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QixNQUFNLElBQUksR0FBUyxHQUFHLENBQUMsSUFBWSxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBR0QsV0FBVyxDQUFvQixNQUFjO1FBQzNDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9CLGVBQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxNQUFNLENBQUMsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBR0ssQUFBTixLQUFLLENBQUMsU0FBUyxDQUFvQixNQUFjLEVBQWlCLEdBQW1CO1FBQ25GLGVBQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxNQUFNLENBQUMsRUFBRSxpQkFBaUIsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDL0QsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUdELE9BQU8sQ0FBb0IsTUFBYyxFQUFpQixHQUFzQjtRQUM5RSxlQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsTUFBTSxDQUFDLEVBQUUsY0FBYyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLENBQUM7Q0FDRixDQUFBO0FBaENZLG9DQUFZO0FBS3ZCO0lBRkMsSUFBQSw4QkFBUyxHQUFFO0lBQ1gsSUFBQSxrQ0FBYSxFQUFDLG9CQUFXLENBQUMsYUFBYSxDQUFDO0lBQzdCLFdBQUEsSUFBQSxvQ0FBZSxHQUFFLENBQUE7SUFBa0IsV0FBQSxJQUFBLGtDQUFhLEdBQUUsQ0FBQTtJQUFnQixXQUFBLElBQUEsNkJBQVEsRUFBQyxjQUFjLENBQUMsQ0FBQTs7cUNBQWhFLGtCQUFNOzs4Q0FRM0M7QUFHRDtJQURDLElBQUEsaUNBQVksR0FBRTtJQUNGLFdBQUEsSUFBQSxvQ0FBZSxHQUFFLENBQUE7O3FDQUFTLGtCQUFNOzsrQ0FHNUM7QUFHSztJQURMLElBQUEsOEJBQVMsRUFBQyxvQkFBVyxDQUFDLGlCQUFpQixDQUFDO0lBQ3hCLFdBQUEsSUFBQSxvQ0FBZSxHQUFFLENBQUE7SUFBa0IsV0FBQSxJQUFBLGdDQUFXLEdBQUUsQ0FBQTs7cUNBQXRCLGtCQUFNLEVBQXNCLG9CQUFjOzs2Q0FHcEY7QUFHRDtJQURDLElBQUEsOEJBQVMsRUFBQyxvQkFBVyxDQUFDLGVBQWUsQ0FBQztJQUM5QixXQUFBLElBQUEsb0NBQWUsR0FBRSxDQUFBO0lBQWtCLFdBQUEsSUFBQSxnQ0FBVyxHQUFFLENBQUE7O3FDQUF0QixrQkFBTTs7MkNBR3hDO3VCQS9CVSxZQUFZO0lBRnhCLElBQUEsZ0JBQU8sR0FBRTtJQUNULElBQUEscUNBQWdCLEVBQUMsV0FBVyxjQUFjLEVBQUUsQ0FBQztxQ0FFaEIseUJBQWU7R0FEaEMsWUFBWSxDQWdDeEIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXEdpdGh1YlxcQWxnb29cXGJhY2tlbmRcXHNyY1xcc29ja2V0XFxjb250cm9sbGVyc1xcR2FtZVJvb21DdHJsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXRNZXNzYWdlRFRPLCBJc1JlYWR5TWVzc2FnZURUTyB9IGZyb20gJ0BkZWZmZXJyYXJkL2FsZ29vLWNvcmUvc3JjL2R0byc7XG5pbXBvcnQgeyBNZXNzYWdlVHlwZSwgVXNlciB9IGZyb20gJ0BkZWZmZXJyYXJkL2FsZ29vLWNvcmUvc3JjL3NvY2tldCc7XG5pbXBvcnQgeyBhc3NlcnROb25OdWxsIH0gZnJvbSAnQGRlZmZlcnJhcmQvYWxnb28tY29yZS9zcmMvdXRpbHMvYXNzZXJ0aW9ucyc7XG5pbXBvcnQgeyBpc1VVSUQgfSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xuaW1wb3J0IHsgUmVxdWVzdCB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtcbiAgQ29ubmVjdGVkU29ja2V0LFxuICBFbWl0T25TdWNjZXNzLFxuICBNZXNzYWdlQm9keSxcbiAgTnNwUGFyYW0sXG4gIE5zcFBhcmFtcyxcbiAgT25Db25uZWN0LFxuICBPbkRpc2Nvbm5lY3QsXG4gIE9uTWVzc2FnZSxcbiAgU29ja2V0Q29udHJvbGxlcixcbiAgU29ja2V0UmVxdWVzdCxcbn0gZnJvbSAnc29ja2V0LWNvbnRyb2xsZXJzJztcbmltcG9ydCB7IFNvY2tldCB9IGZyb20gJ3NvY2tldC5pbyc7XG5pbXBvcnQgeyBTZXJ2aWNlIH0gZnJvbSAndHlwZWRpJztcbmltcG9ydCBHYW1lUm9vbVNlcnZpY2UgZnJvbSAnfi9zZXJ2aWNlcy9HYW1lUm9vbVNlcnZpY2UnO1xuaW1wb3J0IHsgTE9HR0VSIH0gZnJvbSAnfi91dGlscy9sb2dnZXInO1xuXG5jb25zdCBHQU1FX1JPT01fVVVJRCA9ICdnYW1lUm9vbVVVSUQnO1xuXG5AU2VydmljZSgpXG5AU29ja2V0Q29udHJvbGxlcihgL3Jvb21zLzoke0dBTUVfUk9PTV9VVUlEfWApXG5leHBvcnQgY2xhc3MgR2FtZVJvb21DdHJsIHtcbiAgY29uc3RydWN0b3IocHVibGljIHNlcnZpY2U6IEdhbWVSb29tU2VydmljZSkge31cblxuICBAT25Db25uZWN0KClcbiAgQEVtaXRPblN1Y2Nlc3MoTWVzc2FnZVR5cGUuUFVUX0dBTUVfUk9PTSlcbiAgb25Kb2luUm9vbShAQ29ubmVjdGVkU29ja2V0KCkgc29ja2V0OiBTb2NrZXQsIEBTb2NrZXRSZXF1ZXN0KCkgcmVxOiBSZXF1ZXN0LCBATnNwUGFyYW0oR0FNRV9ST09NX1VVSUQpIHJvb206IHN0cmluZykge1xuICAgIGlmICghaXNVVUlEKHJvb20pKSB7XG4gICAgICByZXR1cm4gc29ja2V0LmRpc2Nvbm5lY3QoKTtcbiAgICB9XG4gICAgTE9HR0VSLmluZm8oYFNvY2tldCAke3NvY2tldC5pZH0gY29ubmVjdGVkYCk7XG4gICAgYXNzZXJ0Tm9uTnVsbChyZXEudXNlcik7XG4gICAgY29uc3QgdXNlcjogVXNlciA9IHJlcS51c2VyIGFzIFVzZXI7XG4gICAgcmV0dXJuIHRoaXMuc2VydmljZS5qb2luUm9vbShzb2NrZXQsIHVzZXIsIHJvb20pO1xuICB9XG5cbiAgQE9uRGlzY29ubmVjdCgpXG4gIG9uTGVhdmVSb29tKEBDb25uZWN0ZWRTb2NrZXQoKSBzb2NrZXQ6IFNvY2tldCkge1xuICAgIHRoaXMuc2VydmljZS5sZWF2ZVJvb20oc29ja2V0KTtcbiAgICBMT0dHRVIuaW5mbyhgU29ja2V0ICR7c29ja2V0LmlkfSBkaXNjb25uZWN0ZWRgKTtcbiAgfVxuXG4gIEBPbk1lc3NhZ2UoTWVzc2FnZVR5cGUuR0FNRV9ST09NX01FU1NBR0UpXG4gIGFzeW5jIG9uTWVzc2FnZShAQ29ubmVjdGVkU29ja2V0KCkgc29ja2V0OiBTb2NrZXQsIEBNZXNzYWdlQm9keSgpIGR0bzogQ2hhdE1lc3NhZ2VEVE8pIHtcbiAgICBMT0dHRVIuaW5mbyhgU29ja2V0ICR7c29ja2V0LmlkfSBzZW50IG1lc3NhZ2UgJHtkdG8ubWVzc2FnZX1gKTtcbiAgICBhd2FpdCB0aGlzLnNlcnZpY2Uuc2VuZE1lc3NhZ2Uoc29ja2V0LCBkdG8pO1xuICB9XG5cbiAgQE9uTWVzc2FnZShNZXNzYWdlVHlwZS5HQU1FX1JPT01fUkVBRFkpXG4gIG9uUmVhZHkoQENvbm5lY3RlZFNvY2tldCgpIHNvY2tldDogU29ja2V0LCBATWVzc2FnZUJvZHkoKSBkdG86IElzUmVhZHlNZXNzYWdlRFRPKSB7XG4gICAgTE9HR0VSLmluZm8oYFNvY2tldCAke3NvY2tldC5pZH0gaXMgcmVhZHk6ICR7ZHRvLmlzUmVhZHl9YCk7XG4gICAgdGhpcy5zZXJ2aWNlLmlzUmVhZHkoc29ja2V0LCBkdG8uaXNSZWFkeSk7XG4gIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==