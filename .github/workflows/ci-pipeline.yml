name: CI Pipeline

on: [push, pull_request]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    env:
      WORKDIR: backend
      JWT_SECRET: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: cd $WORKDIR && npm install
      - name: Run tests
        run: cd $WORKDIR && npm run test:ci
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-report-backend
          path: ${{ env.WORKDIR }}/junit.xml

  frontend-test:
    runs-on: ubuntu-latest
    env:
      WORKDIR: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: cd $WORKDIR && npm install
      - name: Run tests
        run: cd $WORKDIR && npm run test
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-report-frontend
          path: ${{ env.WORKDIR }}/dist/junit-report.xml

  backend-package:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:25.0.3-dind
        options: --privileged
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY_USER }}/algoo-backend
      DOCKERFILE: ./Backend.Dockerfile
      DOCKER_REGISTRY: docker.io
      DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Build backend image
        run: docker build --network host -t $DOCKER_REGISTRY/$IMAGE_NAME:latest . -f $DOCKERFILE
      - name: Login to Docker Registry
        run: echo $DOCKER_REGISTRY_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER --password-stdin
      - name: Push backend image
        run: docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest

  frontend-package:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:25.0.3-dind
        options: --privileged
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY_USER }}/algoo-frontend
      DOCKERFILE: ./Frontend.Dockerfile
      DOCKER_REGISTRY: docker.io
      DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Build frontend image
        run: docker build --network host -t $DOCKER_REGISTRY/$IMAGE_NAME:latest . -f $DOCKERFILE
      - name: Login to Docker Registry
        run: echo $DOCKER_REGISTRY_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER --password-stdin
      - name: Push frontend image
        run: docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest